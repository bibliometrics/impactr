cite_cumsum = as.numeric(cite_cumsum))}
df_metric <- NULL
if(metric==TRUE){df_metric <- suppressWarnings(impact_cite_metric(citations = df_out$cite_max, year = df_out$year))}
df_out <- list("df" = df_out, "time" = df_time, "metric" = df_metric, "gscholar_invalid" = gscholar_invalid)
if(gscholar==FALSE){df_out$gscholar_invalid <- NULL}
if(is.null(data_gs)==T&is.null(data_oc)==T){df_out$time <- NULL}
if(metric!=TRUE){df_out$metric <- NULL}
return(df_out)}
data <- impact_cite(df = readRDS("~/starsurg_impact/data/impact_pub.rds"), scopus=T, metric=F)
data
data_oc
data <- impact_cite(df = readRDS("~/starsurg_impact/data/impact_pub.rds"), scopus=T, metric=F)
data
df = readRDS("~/starsurg_impact/data/impact_pub.rds")
scopus=T
metric=F
# Get citation data
require(dplyr)
if(crossref==T&"doi" %in% names(df)){
df <- df %>%
dplyr::select(doi) %>%
dplyr::filter(is.na(doi)==F) %>%
dplyr::mutate(cite_cr = cite_cr(doi)$cite) %>%
dplyr::right_join(dplyr::select(df, -dplyr::matches("cite_cr")), by = "doi") %>%
dplyr::select(-cite_cr, everything())}
if(dimentions==T&"doi" %in% names(df)){
df <- df %>%
dplyr::select(doi) %>%
dplyr::filter(is.na(doi)==F) %>%
dplyr::mutate(cite_dim = cite_dim(doi)$cite) %>%
dplyr::right_join(dplyr::select(df, -dplyr::matches("cite_dim")), by = "doi") %>%
dplyr::select(-cite_dim, everything())} # to move cite_dim last
if(rscopus::have_api_key()){
if(scopus==T&"doi" %in% names(df)){
df <- df %>%
dplyr::select(doi) %>%
dplyr::filter(is.na(doi)==F) %>%
dplyr::mutate(cite_scopus = cite_scopus(doi)$cite) %>%
dplyr::right_join(dplyr::select(df, -dplyr::matches("cite_scopus")), by = "doi") %>%
dplyr::select(-cite_scopus, everything())}}else{print("Please use rscopus::set_api_key() with a valid api")}
data_oc <- NULL
if(oc==T&"doi" %in% names(df)){
doi_oc <- df %>%
dplyr::select(doi) %>%
dplyr::filter(is.na(doi)==F) %>%
dplyr::pull(doi)
data_oc <- cite_oc(doi_oc)
df <- df %>%
dplyr::select(doi) %>%
dplyr::filter(is.na(doi)==F) %>%
dplyr::mutate(cite_oc = data_oc$total$cite) %>%
dplyr::right_join(dplyr::select(df, -dplyr::matches("cite_oc")), by = "doi") %>%
dplyr::select(-cite_oc, everything())}
data <- impact_cite(df = readRDS("~/starsurg_impact/data/impact_pub.rds"), oc=TRUE, scopus=T, metric=F)
data
View(data$df)
data
View(data$df)
data
score_alm
function(doi){unlist(lapply(x, function(x){tryCatch(rAltmetric::altmetric_data(rAltmetric::altmetrics(doi = doi))$score, error=function(e) NA)}))}
score_alm <- function(doi){unlist(lapply(x, function(x){tryCatch(rAltmetric::altmetric_data(rAltmetric::altmetrics(doi = doi))$score, error=function(e) NA)}))}
score_alm
score_alm <- function(doi){unlist(lapply(x, function(x){tryCatch(rAltmetric::altmetric_data(rAltmetric::altmetrics(doi = doi))$score, error=function(e) NA)}))}
score_alm("10.1002/bjs.11453")
score_alm <- function(doi){unlist(lapply(x, function(x){tryCatch(rAltmetric::altmetric_data(rAltmetric::altmetrics(doi = doi))$score, error=function(e) NA)}))}
score_alm(doi = "10.1002/bjs.11453")
doi = "10.1002/bjs.11453"
rAltmetric::altmetrics(doi = doi)
rAltmetric::altmetric_data(rAltmetric::altmetrics(doi = doi)
)
score_alm <- function(doi){unlist(lapply(doi, function(x){tryCatch(rAltmetric::altmetric_data(rAltmetric::altmetrics(doi = x))$score, error=function(e) NA)}))}
score_alm(doi = "10.1002/bjs.11453")
score_alm <- function(doi){unlist(lapply(doi, function(x){tryCatch(rAltmetric::altmetric_data(rAltmetric::altmetrics(doi = x))$score, error=function(e) NA)}))}
# Function-------------------------------
score_alm <- function(doi){lapply(doi, function(x){tryCatch(rAltmetric::altmetric_data(rAltmetric::altmetrics(doi = x))$score, error=function(e) NA)}) %>%
tibble::enframe()}
score_alm(c("10.1002/bjs.11453", "10.1002/bjs5.86"))
library(dplyr)
# Function-------------------------------
score_alm <- function(doi){lapply(doi, function(x){tryCatch(rAltmetric::altmetric_data(rAltmetric::altmetrics(doi = x))$score, error=function(e) NA)}) %>%
tibble::enframe()}
score_alm(c("10.1002/bjs.11453", "10.1002/bjs5.86"))
# Function-------------------------------
score_alm <- function(doi){lapply(doi, function(x){tryCatch(rAltmetric::altmetric_data(rAltmetric::altmetrics(doi = x))$score, error=function(e) NA)}) %>%
unlist()}
score_alm(c("10.1002/bjs.11453", "10.1002/bjs5.86"))
# Function-------------------------------
score_alm <- function(doi){
lapply(doi, function(x){tryCatch(rAltmetric::altmetric_data(rAltmetric::altmetrics(doi = x))$score, error=function(e){NA})}) %>%
unlist()}
score_alm <- function(doi){unlist(lapply(doi, function(x){tryCatch(rAltmetric::altmetric_data(rAltmetric::altmetrics(doi = x))$score, error=function(e){NA})}))}
cite_dim <- function(id){
require(dplyr)
# Classify ID supplied
id_class <- id %>%
tibble::enframe(name = "n", value = "id") %>%
# https://www.crossref.org/blog/dois-and-matching-regular-expressions/
dplyr::mutate(id_type = suppressWarnings(dplyr::if_else(grepl("^10\\.\\d{4,9}/", id)==T,
"doi",
if_else(nchar(id)==8&is.numeric(as.numeric(id))==T,
"pmid", "invalid"))))
# Create Dimentions call
call <- id_class %>%
dplyr::mutate(call = paste0("https://metrics-api.dimensions.ai/",id_type, "/",id)) %>%
dplyr::mutate(id = ifelse(id_type=="invalid", NA, id),
call = ifelse(id_type=="invalid", NA, call))  %>%
dplyr::pull(call)
# Check validity of Dimentions call (e.g. record avaliable)
validity <- call %>%
purrr::map_chr(function(x){y <- tryCatch(xml2::read_html(x), error=function(e) NA)
if(grepl("xml_",class(y)[1])){y <- "valid"}else{y <- "invalid"}})
# All ID
id_class <- id_class %>%
dplyr::mutate(id_call = validity,
call = call)
# Only use valid ID
output <- id_class %>%
dplyr::filter(id_type!="invalid"&id_call!="invalid") %>%
dplyr::pull(call) %>%
purrr::map(function(x){xml2::read_html(x) %>%
rvest::html_text() %>%
jsonlite::fromJSON() %>%
replace(., sapply(., is.null), NA) %>%
tibble::as_tibble() %>%
magrittr::set_colnames(c("id", colnames(.)[2:9])) %>%
dplyr::mutate(id_type = suppressWarnings(dplyr::if_else(nchar(id)==8&is.numeric(as.numeric(id))==T, "pmid", "doi")),
id = as.character(id)) %>%
dplyr::select(id, id_type, times_cited:recent_citations, relative_citation_ratio:field_citation_ratio)}) %>%
dplyr::bind_rows() %>%
dplyr::rename("cite" = times_cited, "cite_2y" = recent_citations,
"rcr" = relative_citation_ratio, "fcr" = field_citation_ratio)
# Output
cite <- id_class %>%
dplyr::left_join(output, by=c("id", "id_type")) %>%
dplyr::mutate(id_pmid = ifelse(id_type=="pmid", id, NA),
id_doi = ifelse(id_type=="doi", id, NA)) %>%
dplyr::select(n:id_call, id_pmid, id_doi, cite:fcr)
return(cite)}
cite_dim(c("hshdsd","10.1002/bjs5.86", "20092384", 26769786))
devtools::install_github("kamclean/impactr")
# score_alm--------------------------------
# Documentation
#' Extract overall almetric score for a publication
#' @description Extract publication data using RISmed / pmid
#' @param doi Vector of unique Digital Object Identifiers (DOI)
#' @return Vector of overall almetric scores (or NA if not available)
#' @import dplyr
#' @importFrom rAltmetric altmetric_data altmetrics
#' @export
# Function-------------------------------
score_alm <- function(doi){
require(dplyr)
lapply(doi, function(x){tryCatch(rAltmetric::altmetric_data(rAltmetric::altmetrics(doi = x))$score, error=function(e){NA})}) %>%
unlist() %>%
return()}
score_alm("10.1002/bjs.11453")
# score_alm--------------------------------
# Documentation
#' Extract overall almetric score for a publication
#' @description Extract publication data using RISmed / pmid
#' @param doi Vector of unique Digital Object Identifiers (DOI)
#' @return Vector of overall almetric scores (or NA if not available)
#' @import dplyr
#' @importFrom rAltmetric altmetric_data altmetrics
#' @export
# Function-------------------------------
score_alm <- function(doi){
require(dplyr)
lapply(doi, function(x){tryCatch(rAltmetric::altmetric_data(rAltmetric::altmetrics(doi = x))$score, error=function(e){NA})}) %>%
unlist() %>%
return()}
source(here::here("R/cite_cr.R"))
source(here::here("R/cite_dim.R"))
source(here::here("R/cite_cr.R"))
source(here::here("R/cite_dim.R"))
source(here::here("R/cite_gs.R"))
source(here::here("R/cite_cr.R"))
source(here::here("R/cite_dim.R"))
source(here::here("R/cite_gs.R"))
source(here::here("R/cite_ocr.R"))
source(here::here("R/cite_scopus.R"))
source(here::here("R/cite_cr.R"))
source(here::here("R/cite_dim.R"))
source(here::here("R/cite_gs.R"))
source(here::here("R/cite_oc.R"))
source(here::here("R/cite_scopus.R"))
source(here::here("R/comb_name_size.R"))
source(here::here("R/diffdate_text.R"))
source(here::here("R/extract_doi.R"))
source(here::here("R/extract_pmid.R"))
source(here::here("R/extract_doi_auth.R"))
source(here::here("R/extract_impact_factor.R"))
source(here::here("R/impact_altmetric.R"))
# impact_altmetric----------------------
# Documentation
#' Extract altmetric data on social media engagment
#' @description Extract impact data from social media engagment
#' @param list_pmid Vector of unique PubMed identifier numbers (PMID)
#' @return Nested dataframe (1) df_output; Original dataset with appended altmetric data (2) temporal; Long format data on temporal changes (3) rank; Long format data altmetric ranking (4) source; Long format data sources used to derive altmetric.
#' @import magrittr
#' @import dplyr
#' @import tibble
#' @importFrom rAltmetric altmetric_data altmetrics
#' @importFrom purrr map map_chr
#' @importFrom data.table rbindlist
#' @importFrom tidyr unite pivot_longer pivot_wider
#' @importFrom stringr str_split_fixed
#' @importFrom stringi stri_reverse
#' @importFrom lubridate as_date as_datetime
#' @export
# Function-------------------------------
# aim to be able to use either pmid or doi
impact_altmetric <- function(list_pmid){
"%ni%" <- Negate("%in%")
# https://api.altmetric.com/docs/call_citations.html
# https://github.com/ropensci/rAltmetric/issues/27
names_cited_old <- c("cited_by_posts_count", "cited_by_accounts_count","cited_by_tweeters_count","cited_by_fbwalls_count","cited_by_msm_count",
"cited_by_policies_count","cited_by_peer_review_sites_count", "cited_by_wikipedia_count","cited_by_feeds_count",
"cited_by_forum_count", "cited_by_gplus_count","cited_by_rh_count", "cited_by_linkedin_count", "readers_count",
"cited_by_delicious_count","cited_by_pinners_count","cited_by_qs_count","cited_by_weibo_count",
"cited_by_rdts_count","cited_by_videos_count")
names_cited <- tibble::tibble(old = names_cited_old) %>%
dplyr::mutate(new = gsub("_count",  "", gsub("cited_by_", "", old))) %>%
dplyr::mutate(new = gsub("fbwalls",  "fb", new),
new = gsub("posts",  "all", new),
new = gsub("tweeters",  "twitter_posts", new),
new = gsub("accounts",  "twitter_accounts", new),
new = gsub("msm",  "news_media", new),
new = gsub("wikipedia",  "wikipedia", new),
new = gsub("feeds",  "blogs", new),
new = gsub("forum",  "forum", new),
new = gsub("gplus",  "googleplus", new),
new = gsub("msm",  "news", new),
new = gsub("linkedin",  "linkedin", new),
new = gsub("rh",  "research_highlight", new),
new = gsub("policies",  "policy_source", new),
new = gsub("delicious",  "other1", new),
new = gsub("pinners",  "other2", new),
new = gsub("qs",  "other3", new),
new = gsub("weibo",  "other4", new),
new = gsub("rdts",  "other5", new),
new = gsub("videos",  "other6", new)) %>%
dplyr::filter(new %ni% c("delicious", "pinners", "qs","weibo")) %>%
dplyr::mutate(new = paste0("n_engage_", new))
var <- c("doi", "title", "type", "author_list", "journal", "issns", "altmetric_id",
"history.1w","history.1m","history.3m","history.6m", "history.1y",
"score","context.all.mean", "context.all.count", "context.all.rank",
"context.journal.mean","context.journal.rank","context.journal.count",
"context.similar_age_journal_3m.mean","context.similar_age_journal_3m.rank", "context.similar_age_journal_3m.count",
"last_updated", "published_on","added_on")
df = tibble::tibble(pmid = list_pmid) %>%
mutate(pmid = as.numeric(as.character(pmid)))
df_alm <- df %>%
dplyr::mutate(alm_data = purrr::map_chr(pmid,
function(x){tryCatch(rAltmetric::altmetric_data(rAltmetric::altmetrics(pmid = x))$score, error=function(e) NA)})) %>%
dplyr::filter(is.na(alm_data)==F) %>%
dplyr::group_split(pmid) %>%
purrr::map(function(x){rAltmetric::altmetric_data(rAltmetric::altmetrics(pmid = x$pmid)) %>%
tibble::as_tibble() %>%
dplyr::mutate(authors = NA) %>%
tidyr::unite(., col = "author_list", sep = ", ", remove = TRUE,
names(dplyr::select(., dplyr::starts_with("authors")))) -> v
if(TRUE %ni% grepl("issns", colnames(v))){
v <- bind_cols(v, tibble::tibble(issns = NA))}
if(TRUE %in% c(var %ni% colnames(v))){
missing_var <- tibble::tibble("var" = var, val = NA) %>%
tidyr::pivot_wider(names_from = var, values_from = val) %>%
select(var[var %ni% colnames(v)])
v <- dplyr::bind_cols(v,missing_var)}
v <- v %>%
tidyr::unite(., col = "issns", sep = ", ", remove = TRUE,
names(dplyr::select(., dplyr::starts_with("issns"))))
names_cited_included <- v %>%
dplyr::select(names_cited$old[names_cited$old %in% names(.)]) %>%
setNames(names_cited$new[names_cited$old %in% names(.)])
names_cited_excluded <- names_cited$new[names_cited$old %ni% names(v)] %>%
setNames(object = rbind.data.frame(rep(NA, length(.))),nm=.)
cited_by <- dplyr::bind_cols(names_cited_included, names_cited_excluded) %>%
dplyr::select(names_cited$new) %>%
dplyr::mutate_all(function(x){as.numeric(ifelse(is.na(x)==T, 0, x))}) %>%
dplyr::mutate(n_engage_other = sum(dplyr::select(., dplyr::starts_with("n_engage_other")))) %>%
dplyr::select(-dplyr::one_of(names(dplyr::select(., n_engage_other1:n_engage_other6))))
var_dates <- tibble::tibble("published_on" = NA, "last_updated" = NA, "added_on" = NA) %>%
dplyr::mutate_all(as.numeric) %>%
select(colnames(.)[colnames(.) %ni% colnames(v)])
v_out <- v %>%
dplyr::bind_cols(var_dates) %>%
dplyr::mutate(pmid = x$pmid) %>%
dplyr::select(pmid, doi, title, type, author_list, journal, "journal_issn" = issns, altmetric_id,
"alm_score_1w" = history.1w,
"alm_score_1m" = history.1m,
"alm_score_3m" = history.3m,
"alm_score_6m" = history.6m,
"alm_score_1y" = history.1y,
"alm_score_now" = score,
"alm_all_mean" = context.all.mean,
"alm_all_rank" = context.all.rank,
"alm_all_n" = context.all.count,
"alm_journal_all_mean" = context.journal.mean,
"alm_journal_all_rank" = context.journal.rank,
"alm_journal_all_n" = context.journal.count,
"alm_journal_3m_mean" = context.similar_age_journal_3m.mean,
"alm_journal_3m_rank" = context.similar_age_journal_3m.rank,
"alm_journal_3m_n" = context.similar_age_journal_3m.count,
last_updated, published_on,added_on,journal) %>%
dplyr::mutate_at(dplyr::vars(pmid, dplyr::starts_with("alm_")), as.numeric) %>%
dplyr::mutate(alm_all_prop = 1-(alm_all_rank-1/alm_all_n),
alm_journal_all_prop = 1-(alm_journal_all_rank/alm_journal_all_n),
alm_journal_3m_prop = 1-(alm_journal_3m_rank/alm_journal_3m_n)) %>%
dplyr::select(journal, pmid:alm_all_n, alm_all_prop,
alm_journal_all_mean:alm_journal_all_n, alm_journal_all_prop,
alm_journal_3m_mean:alm_journal_3m_n, alm_journal_3m_prop,
last_updated, published_on,added_on) %>%
dplyr::bind_cols(cited_by)}) %>%
dplyr::bind_rows() %>% tibble::as_tibble() %>%
dplyr::mutate(date_update = lubridate::as_date(lubridate::as_datetime(as.numeric(last_updated))),
date_pub = lubridate::as_date(lubridate::as_datetime(as.numeric(published_on))),
date_added = lubridate::as_date(lubridate::as_datetime(as.numeric(added_on)))) %>%
dplyr::select(-last_updated, -published_on, -added_on)
pmid_na <- df %>% dplyr::filter(pmid %ni% df_alm$pmid) %>% dplyr::pull(pmid) %>% as.numeric()
df_pmid_na <- head(df_alm, 1) %>%
dplyr::mutate_at(dplyr::vars(-pmid), function(x){x = NA}) %>%
tidyr::uncount(length(pmid_na)) %>%
dplyr::mutate(pmid = pmid_na)
df_out <- dplyr::bind_rows(df_alm, df_pmid_na) %>%
dplyr::mutate(pmid = factor(pmid, levels=as.numeric(df$pmid))) %>%
dplyr::arrange(pmid) %>%
dplyr::mutate(pmid = as.numeric(as.character(pmid)))
df_alm_time <- df_out %>%
dplyr::select(pmid, doi, alm_score_1w:alm_score_now, date_pub,date_added) %>%
dplyr::filter(is.na(doi)==F) %>%
tidyr::pivot_longer(cols = c(alm_score_1w:alm_score_now),
names_to = "alm_time", values_to = "alm_score") %>%
dplyr::mutate(alm_time = ifelse(alm_time=="alm_score_1w", 7,
ifelse(alm_time=="alm_score_1m", 30,
ifelse(alm_time=="alm_score_3m", 90,
ifelse(alm_time=="alm_score_6m", 180,
ifelse(alm_time=="alm_score_1y", 365,
alm_time)))))) %>%
dplyr::mutate(pub2now =  as.numeric(lubridate::as_date(Sys.Date())-date_added)) %>%
dplyr::mutate(alm_time = as.numeric(ifelse(alm_time == "alm_score_now",
pub2now, alm_time))) %>%
dplyr::filter(pub2now>=alm_time) %>%
dplyr::select(-pub2now) %>%
dplyr::arrange(pmid, alm_time) %>%
dplyr::mutate(pmid = factor(pmid))
df_alm_source <- df_out %>%
dplyr::select(pmid, doi, n_engage_all:n_engage_other) %>%
dplyr::mutate_at(dplyr::vars(dplyr::starts_with("n_engage")), as.numeric) %>%
dplyr::filter(is.na(doi)==F) %>%
tidyr::pivot_longer(cols = c(n_engage_all:n_engage_other),
names_to = "source", values_to = "n") %>%
dplyr::mutate(source = gsub("n_engage_", "", source)) %>%
dplyr::filter(source %ni% c("twitter_posts","all")) %>%
dplyr::mutate(source = gsub("twitter_accounts", "twitter", source)) %>%
dplyr::mutate(pmid = factor(pmid),
source = factor(source, levels = c(dplyr::group_by(., source)   %>%
dplyr::summarise(sum = sum(n)) %>%
dplyr::arrange(-sum) %>%
dplyr::filter(sum>0) %>%
dplyr::pull(source)))) %>%
dplyr::filter(is.na(source)==F) %>%
dplyr::group_by(pmid) %>%
dplyr::mutate(total = sum(n))  %>% dplyr::mutate(prop = n / total) %>%
dplyr::ungroup()
df_alm_rank <- df_out %>%
dplyr::select(pmid, doi, journal,alm_score_now,alm_all_mean:alm_journal_3m_prop) %>%
tidyr::pivot_longer(names(dplyr::select(., alm_all_mean:alm_journal_3m_prop)), names_to = "alm_category") %>%
dplyr::mutate(alm_category = gsub("alm_", "", alm_category),
journal = factor(journal)) %>%
dplyr::mutate(alm_measure = stringr::str_split_fixed(stringi::stri_reverse(alm_category), "_", 2)[,1],
alm_category = stringr::str_split_fixed(stringi::stri_reverse(alm_category), "_", 2)[,2]) %>%
dplyr::mutate(alm_measure = stringi::stri_reverse(alm_measure),
alm_category = factor(stringi::stri_reverse(alm_category))) %>%
tidyr::pivot_wider(names_from = alm_measure, values_from = value) %>%
dplyr::filter(is.na(mean)==F) %>%
dplyr::rename(alm_score = alm_score_now)
out <- list("df_output" = df_out, "temporal" = df_alm_time, "rank" = df_alm_rank, "source" = df_alm_source)
return(out)}
source(here::here("R/impact_auth.R"))
source(here::here("R/impact_cite.R"))
source(here::here("R/impact_cite_metric.R"))
impact_auth <- function(df, author_list = "author", pub_group = "pmid", max_inital = 1, upset = FALSE, metric = FALSE){
require(dplyr);require(tidyr);require(stringr);require(tibble);require(stringi)
auth_out <- df %>%
dplyr::mutate(pub_group = dplyr::pull(., pub_group)) %>%
dplyr::mutate(author = dplyr::pull(., author_list)) %>%
dplyr::select(pub_group, author) %>%
dplyr::mutate(auth = stringr::str_split(author, ", ")) %>%
tidyr::unnest(auth) %>%
dplyr::mutate(auth = tolower(auth)) %>%
# identify last space (prior to first name)
dplyr::mutate(fnln_break = tibble::as_tibble(stringi::stri_locate_last(auth, regex = " "))$start) %>%
dplyr::mutate(auth_ln = trimws(substr(auth,1, fnln_break)),
auth_fn = trimws(substr(auth, fnln_break, nchar(auth)))) %>%
dplyr::mutate(auth_fn_imax = trimws(substr(auth_fn, 1,max_inital))) %>%
dplyr::mutate(auth_imax = paste0(auth_ln, " ", auth_fn_imax)) %>%
dplyr::select(pub_group, auth_imax, auth_ln,auth_fn_imax) %>%
dplyr::distinct() %>%
dplyr::group_by(auth_imax) %>%
dplyr::summarise(pub_n = n(),
pub_group = paste0(pub_group, collapse = c(", "))) %>%
dplyr::arrange(-pub_n) %>%
dplyr::select("author" = auth_imax, pub_n, pub_group)
data_upset <- NULL
if(upset==TRUE){
group_val <- levels(unique(dplyr::pull(df, pub_group)))
data_upset = auth_out %>%
tidyr::separate_rows(pub_group, sep = ", ") %>%
dplyr::mutate(name = author) %>%
tidyr::pivot_wider(names_from = "pub_group", values_from = "author") %>%
dplyr::select(-name, -pub_n) %>%
dplyr::mutate_all(function(x){as.numeric(ifelse(is.na(x)==T, 1, 0))})}
out_metric <- NULL
metric_auth <- function(comb_mat){
out <- tibble::tibble(level = factor(ComplexHeatmap::set_name(comb_mat), levels=unique(ComplexHeatmap::set_name(comb_mat))),
n_total = ComplexHeatmap::set_size(comb_mat))  %>%
dplyr::group_by(level) %>%
base::split(.$level) %>%
purrr::map(., function(x){x %>%
dplyr::mutate(n_old = comb_name_size(comb_mat) %>%
dplyr::filter(grepl(paste0("&", x$level), combination)) %>%
dplyr::pull(n) %>% sum()) %>%
dplyr::mutate(n_retain = comb_name_size(comb_mat) %>%
dplyr::filter(grepl(paste0(x$level, "&"), combination)) %>%
dplyr::pull(n) %>% sum()) %>%
dplyr::mutate(n_new = n_total-n_old)}) %>%
data.table::rbindlist() %>% tibble::as_tibble() %>%
dplyr::mutate(n_total_prior = c(NA, dplyr::filter(., level!=level[length(level)])$n_total),
n_new_prior = c(NA, dplyr::filter(., level!=level[length(level)])$n_new),
n_retain = ifelse(n_retain==0, NA, n_retain)) %>%
dplyr::mutate(total_change_prop = round(n_total / n_total_prior, 3),
new_change_prop = round(n_new / n_new_prior, 3),
retain_prop = round(n_retain / n_total, 3)) %>%
dplyr::select(level, n_total, n_total_prior, total_change_prop,
n_old, n_new, n_new_prior, new_change_prop,
n_retain, retain_prop)
return(out)}
if(metric==TRUE&upset==TRUE){
out_metric <- ComplexHeatmap::make_comb_mat(data_upset) %>% metric_auth()}
auth_out <- list("list" = auth_out, "upset" = data_upset, "metric" = out_metric)
return(auth_out)}
df = edisurg_10
author_list = "author_list"
pub_group = "pmid"
max_inital = 1
upset = T
metric = FALSE
impact_auth()
impact_auth(df)
edisurg_10
edisurg_10 <- readRDS("~/starsurg_impact/data/edisurg_10.rds")
impact_auth(df, author_list = "author_list", pub_group = "pmid")
require(dplyr);require(tidyr);require(stringr);require(tibble);require(stringi)
auth_out <- df %>%
dplyr::mutate(pub_group = dplyr::pull(., pub_group)) %>%
dplyr::mutate(author = dplyr::pull(., author_list)) %>%
dplyr::select(pub_group, author) %>%
dplyr::mutate(auth = stringr::str_split(author, ", ")) %>%
tidyr::unnest(auth) %>%
dplyr::mutate(auth = tolower(auth)) %>%
# identify last space (prior to first name)
dplyr::mutate(fnln_break = tibble::as_tibble(stringi::stri_locate_last(auth, regex = " "))$start) %>%
dplyr::mutate(auth_ln = trimws(substr(auth,1, fnln_break)),
auth_fn = trimws(substr(auth, fnln_break, nchar(auth)))) %>%
dplyr::mutate(auth_fn_imax = trimws(substr(auth_fn, 1,max_inital))) %>%
dplyr::mutate(auth_imax = paste0(auth_ln, " ", auth_fn_imax)) %>%
dplyr::select(pub_group, auth_imax, auth_ln,auth_fn_imax) %>%
dplyr::distinct() %>%
dplyr::group_by(auth_imax) %>%
dplyr::summarise(pub_n = n(),
pub_group = paste0(pub_group, collapse = c(", "))) %>%
dplyr::arrange(-pub_n) %>%
dplyr::select("author" = auth_imax, pub_n, pub_group)
require(dplyr);require(tidyr);require(stringr);require(tibble);require(stringi)
auth_out <- df %>%
dplyr::mutate(pub_group = dplyr::pull(., pub_group)) %>%
dplyr::mutate(author = dplyr::pull(., author_list)) %>%
dplyr::select(pub_group, author) %>%
dplyr::mutate(auth = stringr::str_split(author, ", ")) %>%
tidyr::unnest(auth) %>%
dplyr::mutate(auth = tolower(auth)) %>%
# identify last space (prior to first name)
dplyr::mutate(fnln_break = tibble::as_tibble(stringi::stri_locate_last(auth, regex = " "))$start) %>%
dplyr::mutate(auth_ln = trimws(substr(auth,1, fnln_break)),
auth_fn = trimws(substr(auth, fnln_break, nchar(auth)))) %>%
dplyr::mutate(auth_fn_imax = trimws(substr(auth_fn, 1,max_inital))) %>%
dplyr::mutate(auth_imax = paste0(auth_ln, " ", auth_fn_imax)) %>%
dplyr::select(pub_group, auth_imax, auth_ln,auth_fn_imax) %>%
dplyr::distinct() %>%
dplyr::group_by(auth_imax) %>%
dplyr::summarise(pub_n = n(),
pub_group = paste0(pub_group, collapse = c(", "))) %>%
dplyr::arrange(-pub_n) %>%
dplyr::select("author" = auth_imax, pub_n, pub_group)
df %>%
dplyr::mutate(pub_group = dplyr::pull(., pub_group)) %>%
dplyr::mutate(author = dplyr::pull(., author_list)) %>%
dplyr::select(pub_group, author) %>%
dplyr::mutate(auth = stringr::str_split(author, ", ")) %>%
tidyr::unnest(auth) %>%
dplyr::mutate(auth = tolower(auth))
pub_group
author_list
df %>%
dplyr::mutate(pub_group = dplyr::pull(., pub_group)) %>%
dplyr::mutate(author = dplyr::pull(., author_list))
df
df = edisurg_10
df
impact_auth(df, author_list = "author_list", pub_group = "pmid", upset = T, metric = T)
